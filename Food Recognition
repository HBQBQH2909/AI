# initialize CNN
cnn = tf.keras.models.Sequential()
#initialize convolusional network
cnn.add(tf.keras.layers.Conv2D(filters=5, kernel_size=3, activation='relu', input_shape=[64, 64, 3]))
#Add Maximum pooling layer, where pool size and strides can vary accordingly.
cnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))
cnn.add(tf.keras.layers.Conv2D(filters=32, kernel_size=3, activation='relu'))
cnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))
cnn.add(tf.keras.layers.Flatten())
#Add Artificial Neural Network
cnn.add(tf.keras.layers.Dense(units=128, activation='relu'))
cnn.add(tf.keras.layers.Dense(units=9, activation='softmax'))
#compile CNN
cnn.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])
#training
cnn.fit(
    x = training_set,
    steps_per_epoch=20,
    epochs=50,
    validation_data=test_set
    )
cnn.save('CNN_Money.h5')
